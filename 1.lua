local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local player = Players.LocalPlayer
local mouse = player:GetMouse()

local aimbotEnabled = false
local fovRadius = 150 
local aimDelay = 0.1 
local toggleKey = Enum.KeyCode.T 
local noclipEnabled = false 
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
local toggleKeyNoclip = Enum.KeyCode.N 

-- Create Window
local KavoUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = KavoUI.CreateLib("Emergency Emden Script (BETA) | By Grok", "Ocean")

--- Create Tabs
local Welcome = Window:NewTab("Info")
local Main = Window:NewTab("Main")
local Aimbot = Window:NewTab("Aimbot")

-- Create Section
local Info = Welcome:NewSection("Information") 
local MainSection = Main:NewSection("Main Tab")
local AimbotSection = Aimbot:NewSection("Aimbot Tab")


-- Create Label (Information)
Info:NewLabel("Emden Script v1.1.0 (BETA)")
Info:NewLabel("Script generated by Grok | Edit by Fin12n (Private Script)")
Info:NewLabel("[+] New Aimbot (BETA)")
Info:NewLabel("[+] Fly (NEW)")
Info:NewLabel("[+] Noclip (New) (BETA)")
Info:NewLabel("[+] ESP/Glow (BETA)")

-- Fly Button
MainSection:NewButton("Fly", "Press `O` to fly", function()

    local flyEnabled = false
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
    local flySpeed = 100 
    local toggleKey2 = Enum.KeyCode.X
    local bodyVelocity, bodyGyro


    player.CharacterAdded:Connect(function(newCharacter)
        character = newCharacter
        humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        if flyEnabled then
            startFlying()
        end
    end)


    local function startFlying()
        if humanoidRootPart and not bodyVelocity and not bodyGyro then
            bodyVelocity = Instance.new("BodyVelocity")
            bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
            bodyVelocity.Velocity = Vector3.new(0, 0, 0)
            bodyVelocity.Parent = humanoidRootPart

            bodyGyro = Instance.new("BodyGyro")
            bodyGyro.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
            bodyGyro.P = 20000
            bodyGyro.D = 2000
            bodyGyro.CFrame = CFrame.new(humanoidRootPart.Position) * CFrame.Angles(0, 0, 0)
            bodyGyro.Parent = humanoidRootPart
        end
    end

    local function stopFlying()
        if bodyVelocity then bodyVelocity:Destroy() end
        if bodyGyro then bodyGyro:Destroy() end
        bodyVelocity = nil
        bodyGyro = nil
    end

    -- 
    RunService.RenderStepped:Connect(function()
        if flyEnabled and character and humanoidRootPart and bodyVelocity and bodyGyro then
            local humanoid = character:FindFirstChild("Humanoid")
            if humanoid then
                local moveDirection = humanoid.MoveDirection
                local verticalInput = 0

                if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                    verticalInput = flySpeed
                elseif UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
                    verticalInput = -flySpeed
                end

                local moveVector = Vector3.new(moveDirection.X * flySpeed, verticalInput, moveDirection.Z * flySpeed)
                bodyVelocity.Velocity = moveVector

                local uprightCFrame = CFrame.new(humanoidRootPart.Position) * CFrame.Angles(0, humanoidRootPart.Orientation.Y, 0)
                bodyGyro.CFrame = uprightCFrame
            end
        end
    end)

    -- 
    UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
        if input.KeyCode == toggleKey2 and not gameProcessedEvent then
            flyEnabled = not flyEnabled
            if flyEnabled then
                startFlying()
            else
                stopFlying()
            end
        end
    end)
end)

-- Noclip Function
MainSection:NewButton("Noclip", "Press `N` to Noclip", function()
    -- 
    local function toggleNoclip()
        noclipEnabled = not noclipEnabled
        if noclipEnabled then
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        else
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
        end
    end
    
    -- 
    UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
        if input.KeyCode == toggleKeyNoclip and not gameProcessedEvent then
            toggleNoclip()
        end
    end)
    
    -- 
    player.CharacterAdded:Connect(function(newCharacter)
        character = newCharacter
        if noclipEnabled then
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end
    end)
end)

-- ESP/Glow
local isEnabled = false
local highlights = {}

local function addESPToPlayer(player)
    if player.Character then
        local character = player.Character
        local head = character:WaitForChild("Head", 5)
        if head and not highlights[player] then
            local highlight = Instance.new("Highlight")
            highlight.Name = "ESPGlow"
            highlight.FillColor = Color3.fromRGB(255, 255, 255)
            highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
            highlight.FillTransparency = 0.3
            highlight.OutlineTransparency = 0
            highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
            highlight.Parent = character

            local billboard = Instance.new("BillboardGui")
            billboard.Name = "ESPName"
            billboard.Size = UDim2.new(0, 150, 0, 40)
            billboard.StudsOffset = Vector3.new(0, 3, 0)
            billboard.AlwaysOnTop = true
            billboard.Parent = head

            local nameLabel = Instance.new("TextLabel")
            nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
            nameLabel.Position = UDim2.new(0, 0, 0, 0)
            nameLabel.BackgroundTransparency = 1
            nameLabel.Text = player.Name
            nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            nameLabel.TextSize = 18
            nameLabel.Font = Enum.Font.SourceSansBold
            nameLabel.TextScaled = false
            nameLabel.Parent = billboard

            local distanceLabel = Instance.new("TextLabel")
            distanceLabel.Size = UDim2.new(1, 0, 0.5, 0)
            distanceLabel.Position = UDim2.new(0, 0, 0.5, 0)
            distanceLabel.BackgroundTransparency = 1
            distanceLabel.Text = "N/A"
            distanceLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            distanceLabel.TextSize = 14
            distanceLabel.Font = Enum.Font.SourceSans
            distanceLabel.TextScaled = false
            distanceLabel.Parent = billboard

            highlights[player] = {Highlight = highlight, Billboard = billboard, DistanceLabel = distanceLabel}
        end

        player.CharacterAdded:Connect(function(character)
            local head = character:WaitForChild("Head", 5)
            if head and isEnabled then
                if highlights[player] then
                    if highlights[player].Highlight then highlights[player].Highlight:Destroy() end
                    if highlights[player].Billboard then highlights[player].Billboard:Destroy() end
                end

                local highlight = Instance.new("Highlight")
                highlight.Name = "ESPGlow"
                highlight.FillColor = Color3.fromRGB(255, 255, 255)
                highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                highlight.FillTransparency = 0.3
                highlight.OutlineTransparency = 0
                highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                highlight.Parent = character

                local billboard = Instance.new("BillboardGui")
                billboard.Name = "ESPName"
                billboard.Size = UDim2.new(0, 150, 0, 40)
                billboard.StudsOffset = Vector3.new(0, 3, 0)
                billboard.AlwaysOnTop = true
                billboard.Parent = head

                local nameLabel = Instance.new("TextLabel")
                nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
                nameLabel.Position = UDim2.new(0, 0, 0, 0)
                nameLabel.BackgroundTransparency = 1
                nameLabel.Text = player.Name
                nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                nameLabel.TextSize = 18
                nameLabel.Font = Enum.Font.SourceSansBold
                nameLabel.TextScaled = false
                nameLabel.Parent = billboard

                local distanceLabel = Instance.new("TextLabel")
                distanceLabel.Size = UDim2.new(1, 0, 0.5, 0)
                distanceLabel.Position = UDim2.new(0, 0, 0.5, 0)
                distanceLabel.BackgroundTransparency = 1
                distanceLabel.Text = "N/A"
                distanceLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                distanceLabel.TextSize = 14
                distanceLabel.Font = Enum.Font.SourceSans
                distanceLabel.TextScaled = false
                distanceLabel.Parent = billboard

                highlights[player] = {Highlight = highlight, Billboard = billboard, DistanceLabel = distanceLabel}
            end
        end)
    end
end

local function enableESP()
    for _, player in pairs(game.Players:GetPlayers()) do
        addESPToPlayer(player)
    end
end

local function disableESP()
    for player, data in pairs(highlights) do
        if data.Highlight then data.Highlight:Destroy() end
        if data.Billboard then data.Billboard:Destroy() end
    end
    highlights = {}
end

RunService.RenderStepped:Connect(function()
    if isEnabled then
        local localPlayer = game.Players.LocalPlayer
        local localChar = localPlayer.Character
        local localRoot = localChar and localChar:FindFirstChild("HumanoidRootPart")
        if localRoot then
            local localPos = localRoot.Position
            for player, data in pairs(highlights) do
                local character = player.Character
                local targetRoot = character and character:FindFirstChild("HumanoidRootPart")
                if targetRoot then
                    local distance = (localPos - targetRoot.Position).Magnitude
                    data.DistanceLabel.Text = math.floor(distance) .. " studs"
                else
                    data.DistanceLabel.Text = "N/A"
                end
            end
        end
    end
end)

game.Players.PlayerAdded:Connect(function(player)
    if isEnabled then
        addESPToPlayer(player)
    end
end)

game.Players.PlayerRemoving:Connect(function(player)
    if highlights[player] then
        if highlights[player].Highlight then highlights[player].Highlight:Destroy() end
        if highlights[player].Billboard then highlights[player].Billboard:Destroy() end
        highlights[player] = nil
    end
end)

MainSection:NewButton("ESP/Glow", "Enable ESP/Glow", function()
    isEnabled = not isEnabled
    if isEnabled then
        enableESP()
    else
        disableESP()
    end
end)

AimbotSection:NewToggle("Aimbot", "Press `T` to Enable", function(state)
    if state then
        aimbotEnabled = true
        StarterGui:SetCore("SendNotification", {
            Title = "Aimbot Status",
            Text = "Aimbot Enabled!",
            Duration = 2
        })
    else
        aimbotEnabled = false
        StarterGui:SetCore("SendNotification", {
            Title = "Aimbot Status",
            Text = "Aimbot Disabled!",
            Duration = 2
        })
    end
end)

Aimbot:NewLabel("Hold Right Mouse Button to aim\nPress `T` to Toggle")
Aimbot:NewLabel("Function in this BETA (So u may Banned) BEWARE!")

-- 
local function getTargetUnderCrosshair()
    local targetPlayer = nil
    local closestDistance = math.huge
    local mousePos = Vector2.new(mouse.X, mouse.Y)

    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character then
            local targetHumanoid = otherPlayer.Character:FindFirstChild("Humanoid")
            local targetRootPart = otherPlayer.Character:FindFirstChild("Head")
            if targetHumanoid and targetRootPart and targetHumanoid.Health > 0 then
                local screenPoint, onScreen = workspace.CurrentCamera:WorldToViewportPoint(targetRootPart.Position)
                if onScreen then
                    local targetPos = Vector2.new(screenPoint.X, screenPoint.Y)
                    local distance = (mousePos - targetPos).Magnitude
                    if distance < closestDistance and distance <= fovRadius then
                        closestDistance = distance
                        targetPlayer = otherPlayer
                    end
                end
            end
        end
    end
    return targetPlayer
end

-- 
local function aimAt(target)
    local character = player.Character
    local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
    local targetRootPart = target.Character and target.Character:FindFirstChild("Head") 

    if humanoidRootPart and targetRootPart then
        local camera = workspace.CurrentCamera
        camera.CFrame = CFrame.new(camera.CFrame.Position, targetRootPart.Position)
    end
end

-- 
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if input.KeyCode == toggleKey and not gameProcessedEvent then
        aimbotEnabled = not aimbotEnabled
    end
end)

-- 
local aiming = false
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if input.UserInputType == Enum.UserInputType.MouseButton2 and not gameProcessedEvent then
        aiming = true
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        aiming = false
    end
end)

-- 
RunService.RenderStepped:Connect(function()
    if aimbotEnabled and aiming then
        local target = getTargetUnderCrosshair()
        if target then
            aimAt(target)
            wait(aimDelay) -- 
        end
    end
end)

StarterGui:SetCore("SendNotification", {
    Title = "Script Loaded",
    Content = "Script loaded successfully! | Have a Funny time!",
    Duration = 3,
})
